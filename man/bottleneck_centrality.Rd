% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bottleneck_centrality.R
\name{bottleneck_centrality}
\alias{bottleneck_centrality}
\title{Find the BottleNeck centrality score}
\usage{
bottleneck_centrality(
  graph,
  mode = c("all", "out", "in"),
  vids = igraph::V(graph),
  n = 4
)
}
\arguments{
\item{graph}{The input graph as igraph object}

\item{mode}{Character constant, gives whether the shortest paths to or from 
the given vertices should be calculated for directed graphs. 
If \code{out} then the shortest paths from the vertex, if \code{in} then to 
it will be considered. If \code{all}, the default, then the corresponding 
undirected graph will be used. This argument is ignored for undirected graphs.}

\item{vids}{Numeric vertex sequence, the vertices that should be considered.
Default is all vertices. Otherwise, the operation is performed on the 
subgraph only containing vertices \code{vids}.}

\item{n}{scalar, defaults to 4.}
}
\value{
A numeric vector contaning the centrality scores for the selected vertices.
}
\description{
BottleNeck Centrality for vertex v is defined as:
\deqn{BN(v) = \sum_{s\in v} P_{s}(v)}{BN(v) = sum(P(s)(v), s in v)}
Let \eqn{T_{s}}{T(s)} be a shortest path tree rooted at node \eqn{s}{s}.
\eqn{P_{s}(v) = 1}{P(s)(v) = 1} if more than 1/nth of the shortest paths 
from node \eqn{s}{s} to other nodes in \eqn{T_{s}}{T(s)} go through 
vertex \eqn{v}{v}, otherwise \eqn{P_{s}(v) = 0}{P(s)(v) = 0}.
}
\details{
For each node \eqn{v}{v} in the graph, construct a tree \eqn{T_{v}}{T(v)} 
of shortest paths from that node to all other nodes in the graph. 

For a node \eqn{v}{v}, \eqn{n_{v}}{n(v)} is the number of nodes that are 
directly or indirectly connected to node \eqn{v}{v} 
(i.e. the tree \eqn{T_{v}}{T(v)} contains these nodes). 

For each tree \eqn{T_{v}}{T(v)}, determine which nodes w are on at least 
1/nth of the shortest paths from v. 
These nodes w represent 'bottle necks' of the shortest path tree 
\eqn{T_{v}}{T(v)} rooted at node \eqn{v}{v}.

Note that the implementation of this measure in the \code{centiserve} package 
is incorrect, so use our function and not theirs.
}
\examples{
g <- igraph::graph(c(1,2,2,3,3,4,4,2))
bottleneck_centrality(g)
bottleneck_centrality(g, vids = c(1, 2, 4))
bottleneck_centrality(g, mode = "out")
bottleneck_centrality(g, mode = "in")
}
\references{
Przulj, N., Dennis A. Wigle, and Igor Jurisica. 
"Functional topology in a network of protein interactions." Bioinformatics 20.3 (2004): 340-348.
}
